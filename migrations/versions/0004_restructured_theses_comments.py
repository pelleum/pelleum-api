"""restructured theses comments

Revision ID: 0004
Revises: 0003
Create Date: 2021-12-26 21:56:51.329263

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "0004"
down_revision = "0003"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_theses_comments_thesis_id", table_name="theses_comments")
    op.drop_index("ix_theses_comments_user_id", table_name="theses_comments")
    op.drop_index("ix_theses_comments_username", table_name="theses_comments")
    op.drop_table("theses_comments")
    op.add_column(
        "posts", sa.Column("is_post_comment_on", sa.BigInteger(), nullable=True)
    )
    op.add_column(
        "posts", sa.Column("is_thesis_comment_on", sa.BigInteger(), nullable=True)
    )
    op.drop_index("ix_posts_is_comment_on", table_name="posts")
    op.create_index(
        op.f("ix_posts_is_post_comment_on"),
        "posts",
        ["is_post_comment_on"],
        unique=False,
    )
    op.create_index(
        op.f("ix_posts_is_thesis_comment_on"),
        "posts",
        ["is_thesis_comment_on"],
        unique=False,
    )
    op.drop_column("posts", "is_comment_on")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "posts",
        sa.Column("is_comment_on", sa.BIGINT(), autoincrement=False, nullable=True),
    )
    op.drop_index(op.f("ix_posts_is_thesis_comment_on"), table_name="posts")
    op.drop_index(op.f("ix_posts_is_post_comment_on"), table_name="posts")
    op.create_index("ix_posts_is_comment_on", "posts", ["is_comment_on"], unique=False)
    op.drop_column("posts", "is_thesis_comment_on")
    op.drop_column("posts", "is_post_comment_on")
    op.create_table(
        "theses_comments",
        sa.Column("comment_id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column("thesis_id", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("username", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("content", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["thesis_id"], ["theses.thesis_id"], name="theses_comments_thesis_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.user_id"], name="theses_comments_user_id_fkey"
        ),
        sa.PrimaryKeyConstraint("comment_id", name="theses_comments_pkey"),
    )
    op.create_index(
        "ix_theses_comments_username", "theses_comments", ["username"], unique=False
    )
    op.create_index(
        "ix_theses_comments_user_id", "theses_comments", ["user_id"], unique=False
    )
    op.create_index(
        "ix_theses_comments_thesis_id", "theses_comments", ["thesis_id"], unique=False
    )
    # ### end Alembic commands ###
